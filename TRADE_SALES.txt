SELECT ACCOUNTING_YEAR,
            RIGHT(ACCOUNTING_PERIOD_NUMBER,2) AS ACCOUNTING_PERIOD,
            ACCOUNTING_WEEK_NUMBER,
            CONCAT('FY',ACCOUNTING_YEAR,'P',RIGHT(ACCOUNTING_PERIOD_NUMBER,2),'W',ACCOUNTING_WEEK_NUMBER) AS FY_PW,
            DENSE_RANK() OVER(ORDER BY FY_PW DESC) AS FYP_RANK,
            CASE WHEN FYP_RANK BETWEEN 1 AND 52 THEN 'TY'
                 WHEN FYP_RANK BETWEEN 53 AND 104 THEN 'LY'
            END AS Year_Flag,
            SUM(CASE WHEN fk_source_system_id = 15 THEN TOTAL_SELLING_PRICE_WITHOUT_GST END) AS NET_SALES_ONL,
//            SUM(CASE WHEN fk_source_system_id = 7 THEN TOTAL_SELLING_PRICE_WITHOUT_GST END) AS NET_SALES_STR,
            SUM(TOTAL_SELLING_PRICE_WITHOUT_GST) AS NET_SALES,
            SUM(CASE WHEN fk_source_system_id = 15 
                     AND RBU_CODE IN ('100','150','200') THEN TOTAL_SELLING_PRICE_WITHOUT_GST END) AS NET_SALES_ONL_APP,
            SUM(CASE WHEN RBU_CODE IN ('100','150','200') THEN TOTAL_SELLING_PRICE_WITHOUT_GST END) AS NET_SALES_APP
//            SUM(CASE WHEN fk_source_system_id = 15 THEN QUANTITY_SOLD END) AS NET_UNITS_ONL,
//            SUM(CASE WHEN fk_source_system_id = 7 THEN QUANTITY_SOLD END) AS NET_UNITS_INS
          //  COUNT(DISTINCT DD_EXTERNALORDERID) as TRNS
    FROM (select * from "KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD"."SALES"."FACT_SALES_DETAIL") a
    JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.SALES.DIM_TRANSACTION_TYPE dtt
          ON dtt.SK_TRANSACTION_TYPE_ID = a.fK_TRANSACTION_TYPE_ID
    INNER JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE dd
          ON a.fk_date_id = dd.sk_date_id
    INNER JOIN "KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD"."COMMON_DIMENSIONS"."DIM_PRODUCT" PROD
          ON a.FK_PRODUCT_ID = PROD.SK_PRODUCT_ID
    WHERE TRANSACTION_TYPE != 'SOR' 
          AND a.TRANSACTION_VOIDED = FALSE 
          AND a.TRANSACTION_SUSPENDED = FALSE 
          AND TRANSACTION_GIFTVOUCHER = FALSE 
          AND TRANSACTION_GIFTCARD = FALSE
          AND ACCOUNTING_YEAR >= 2022
          AND DATE <= CURRENT_DATE()-1
    GROUP BY 1,2,3,4
    ORDER BY 4 DESC;